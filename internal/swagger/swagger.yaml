definitions:
  dto.LoginRequest:
    properties:
      identifier:
        type: string
      password:
        type: string
    required:
    - identifier
    - password
    type: object
  dto.LoginResponse:
    properties:
      token:
        type: string
    type: object
  dto.ProfileResponse:
    properties:
      email:
        type: string
      id:
        type: string
      name:
        type: string
      role_code:
        type: string
      role_id:
        type: string
      role_name:
        type: string
      username:
        type: string
    type: object
  dto.RegisterRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        minLength: 8
        type: string
      role_code:
        enum:
        - admin
        - user
        - staff
        - courier
        type: string
      username:
        minLength: 3
        type: string
    required:
    - email
    - name
    - password
    - role_code
    - username
    type: object
  httpx.Envelope:
    properties:
      data: {}
      message:
        type: string
      result:
        type: boolean
    type: object
info:
  contact: {}
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Login payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/dto.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/httpx.Envelope'
            - properties:
                data:
                  $ref: '#/definitions/dto.LoginResponse'
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/httpx.Envelope'
      summary: Login
      tags:
      - auth
  /auth/me:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/httpx.Envelope'
            - properties:
                data:
                  $ref: '#/definitions/dto.ProfileResponse'
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/httpx.Envelope'
      security:
      - Bearer: []
      summary: Get profile (me)
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: Register payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/dto.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/httpx.Envelope'
            - properties:
                data:
                  $ref: '#/definitions/dto.ProfileResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpx.Envelope'
      summary: Register user
      tags:
      - auth
swagger: "2.0"
